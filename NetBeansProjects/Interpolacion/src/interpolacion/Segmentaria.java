/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interpolacion;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class Segmentaria extends javax.swing.JFrame {
    private String[] args;
    private double x;
    private double x0;
    private double x1;
    private double x2;
    private double x3;
    private double y0;
    private double y1;
    private double y2;
    private double y3;
    private double F2Xi;
    private double F2Xi_1;
    private double valorAproximado;
    private final ArrayList<Double> cordenadasx;
    private final ArrayList<Double> cordenadasy;

    

    /**
     * Creates new form InterpolacionSegmentaria
     */
    public Segmentaria() {
        args = null;
        cordenadasx = new ArrayList<Double>();
        cordenadasy = new ArrayList<Double>();
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        txtValorAproximado.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpFondo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        txtX = new javax.swing.JTextField();
        lblX = new javax.swing.JLabel();
        lblX0 = new javax.swing.JLabel();
        txtX0 = new javax.swing.JTextField();
        lblX1 = new javax.swing.JLabel();
        txtX1 = new javax.swing.JTextField();
        lblX2 = new javax.swing.JLabel();
        txtX2 = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        lblValorAproximado = new javax.swing.JLabel();
        txtValorAproximado = new javax.swing.JTextField();
        btnVolver = new javax.swing.JButton();
        txtY2 = new javax.swing.JTextField();
        txtY1 = new javax.swing.JTextField();
        lblY1 = new javax.swing.JLabel();
        lblY2 = new javax.swing.JLabel();
        lblY0 = new javax.swing.JLabel();
        txtY0 = new javax.swing.JTextField();
        txtX3 = new javax.swing.JTextField();
        lblX3 = new javax.swing.JLabel();
        txtY3 = new javax.swing.JTextField();
        lblY3 = new javax.swing.JLabel();
        lblF2Xi = new javax.swing.JLabel();
        txtF2Xi = new javax.swing.JTextField();
        lblF2Xi_1 = new javax.swing.JLabel();
        txtF2Xi_1 = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpFondo.setBackground(new java.awt.Color(51, 102, 255));

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblTitulo.setText("Interpolaci√≥n Segmentaria");

        txtX.setPreferredSize(new java.awt.Dimension(50, 50));

        lblX.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblX.setText("X = ");

        lblX0.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblX0.setText("X0=");

        txtX0.setPreferredSize(new java.awt.Dimension(50, 50));

        lblX1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblX1.setText("X1=");

        txtX1.setPreferredSize(new java.awt.Dimension(50, 50));

        lblX2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblX2.setText("X2=");

        txtX2.setPreferredSize(new java.awt.Dimension(50, 50));

        btnCalcular.setText("Calcular");
        btnCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCalcularMouseClicked(evt);
            }
        });

        lblValorAproximado.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblValorAproximado.setText("Valor Aproximado");

        btnVolver.setText("Volver");
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverMouseClicked(evt);
            }
        });

        txtY2.setPreferredSize(new java.awt.Dimension(50, 50));

        txtY1.setPreferredSize(new java.awt.Dimension(50, 50));

        lblY1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblY1.setText("Y1=");

        lblY2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblY2.setText("Y2=");

        lblY0.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblY0.setText("Y0=");

        txtY0.setPreferredSize(new java.awt.Dimension(50, 50));

        txtX3.setPreferredSize(new java.awt.Dimension(50, 50));

        lblX3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblX3.setText("X3=");

        txtY3.setPreferredSize(new java.awt.Dimension(50, 50));

        lblY3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblY3.setText("Y3=");

        lblF2Xi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblF2Xi.setText("F''(xi) =");

        lblF2Xi_1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblF2Xi_1.setText("F''(xi_1) =");

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpFondoLayout = new javax.swing.GroupLayout(jpFondo);
        jpFondo.setLayout(jpFondoLayout);
        jpFondoLayout.setHorizontalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createSequentialGroup()
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblValorAproximado)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtValorAproximado, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblF2Xi)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtF2Xi, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblF2Xi_1)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtF2Xi_1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createSequentialGroup()
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblX0)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtX0, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblX1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtX1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblX2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtX2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblX3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtX3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(30, 30, 30)
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblY3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtY3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblY0)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtY0, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblY2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtY2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblY1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtY1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(30, 30, 30)
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createSequentialGroup()
                                    .addComponent(lblX)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnVolver, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpFondoLayout.setVerticalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtX0, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblX0))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtX1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblX1)))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblX)
                                .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtY0, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblY0)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtY1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblY1)
                            .addComponent(btnCalcular))
                        .addGap(10, 10, 10)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtY2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblY2)
                            .addComponent(txtX2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblX2)
                            .addComponent(btnLimpiar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtY3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblY3)
                            .addComponent(txtX3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblX3)
                            .addComponent(btnVolver))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValorAproximado)
                    .addComponent(txtValorAproximado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblF2Xi_1)
                    .addComponent(txtF2Xi_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblF2Xi)
                    .addComponent(txtF2Xi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalcularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCalcularMouseClicked
        txtValorAproximado.setText("");
        txtF2Xi.setText("");
        txtF2Xi_1.setText("");
        
        

        if(valoresValidos()){
            calcularSegundasDerivadas();
            valorAproximado = interpolacionCubicoSegmentaria();
            mostrarResultados();
        }
    }//GEN-LAST:event_btnCalcularMouseClicked

    private void btnVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseClicked
        Menu.main(args);
        this.dispose();
    }//GEN-LAST:event_btnVolverMouseClicked

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarMouseClicked

    public void limpiarCampos(){
        txtF2Xi.setText("");
        txtF2Xi_1.setText("");
        txtX.setText("");
        txtX0.setText("");
        txtX1.setText("");
        txtX2.setText("");
        txtX3.setText("");
        txtY0.setText("");
        txtY1.setText("");
        txtY2.setText("");
        txtY3.setText("");
        txtValorAproximado.setText("");
    }
    
    public boolean valoresValidos(){
        
        if(this.txtX.getText().equalsIgnoreCase("") || this.txtX0.getText().equalsIgnoreCase("") || 
           this.txtX1.getText().equalsIgnoreCase("")|| this.txtX2.getText().equalsIgnoreCase("") ||
           this.txtX2.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Valores incompletos");
            return false;
        }

        
        if(this.txtX.getText().equalsIgnoreCase("pi") || this.txtX.getText().equalsIgnoreCase("e")){
            if(this.txtX.getText().equalsIgnoreCase("pi"))
                x = 3.141592653589793;
            else
                x = 2.718281828459045;
                
        }else{
            try{
                x = Double.parseDouble(this.txtX.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de X es inv√°lido");
                return false;
            }
        }
        
        if(this.txtX0.getText().equalsIgnoreCase("pi") || this.txtX0.getText().equalsIgnoreCase("e")){
            if(this.txtX0.getText().equalsIgnoreCase("pi"))
                x0 = 3.141592653589793;
            else
                x0 = 2.718281828459045;
                
        }else{
            try{
                x0 = Double.parseDouble(this.txtX0.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de X0 es inv√°lido");
                return false;
            }
        }
        
        if(this.txtX1.getText().equalsIgnoreCase("pi") || this.txtX1.getText().equalsIgnoreCase("e")){
            if(this.txtX1.getText().equalsIgnoreCase("pi"))
                x1 = 3.141592653589793;
            else
                x1 = 2.718281828459045;
                
        }else{
            try{
                x1 = Double.parseDouble(this.txtX1.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de X1 es inv√°lido");
                return false;
            }
        }
        
        if(this.txtX2.getText().equalsIgnoreCase("pi") || this.txtX2.getText().equalsIgnoreCase("e")){
            if(this.txtX2.getText().equalsIgnoreCase("pi"))
                x2 = 3.141592653589793;
            else
            x2 = 2.718281828459045;
                
        }else{
            try{
                x2 = Double.parseDouble(this.txtX2.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de X2 es inv√°lido");
                return false;
            }
        }
        
        if(this.txtX3.getText().equalsIgnoreCase("pi") || this.txtX3.getText().equalsIgnoreCase("e")){
            if(this.txtX3.getText().equalsIgnoreCase("pi"))
                x3 = 3.141592653589793;
            else
            x3 = 2.718281828459045;
                
        }else{
            try{
                x3 = Double.parseDouble(this.txtX3.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de X3 es inv√°lido");
                return false;
            }
        }
        
        
        if(this.txtY0.getText().equalsIgnoreCase("pi") || this.txtY0.getText().equalsIgnoreCase("e")){
            if(this.txtY0.getText().equalsIgnoreCase("pi"))
                y0 = 3.141592653589793;
            else
                y0 = 2.718281828459045;
                
        }else{
            try{
                y0 = Double.parseDouble(this.txtY0.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de Y0 es inv√°lido");
                return false;
            }
        }
        
        if(this.txtY1.getText().equalsIgnoreCase("pi") || this.txtY1.getText().equalsIgnoreCase("e")){
            if(this.txtY1.getText().equalsIgnoreCase("pi"))
                y1 = 3.141592653589793;
            else
                y1 = 2.718281828459045;
                
        }else{
            try{
                y1 = Double.parseDouble(this.txtY1.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de Y1 es inv√°lido");
                return false;
            }
        }
        
        if(this.txtY2.getText().equalsIgnoreCase("pi") || this.txtY2.getText().equalsIgnoreCase("e")){
            if(this.txtY2.getText().equalsIgnoreCase("pi"))
                y2 = 3.141592653589793;
            else
            y2 = 2.718281828459045;
                
        }else{
            try{
                y2 = Double.parseDouble(this.txtY2.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de Y2 es inv√°lido");
                return false;
            }
        }
        
        if(this.txtY3.getText().equalsIgnoreCase("pi") || this.txtY3.getText().equalsIgnoreCase("e")){
            if(this.txtY3.getText().equalsIgnoreCase("pi"))
                y3 = 3.141592653589793;
            else
            y3 = 2.718281828459045;
                
        }else{
            try{
                y3 = Double.parseDouble(this.txtY3.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de Y3 es inv√°lido");
                return false;
            }
        } 
        
        if(txtX.getText().equalsIgnoreCase(txtX0.getText()) || txtX.getText().equalsIgnoreCase(txtX1.getText()) || 
           txtX.getText().equalsIgnoreCase(txtX2.getText()) || txtX0.getText().equalsIgnoreCase(txtX1.getText())||
           txtX0.getText().equalsIgnoreCase(txtX2.getText())|| txtX1.getText().equalsIgnoreCase(txtX2.getText()) ){
            
            JOptionPane.showMessageDialog(this, "Los valores de X X0 X1 X2 deben ser distintos");
            return false;
        }
        
        if(!((x0<x1)&&(x1<x2)&&(x2<x3))){
                JOptionPane.showMessageDialog(this, "Los valores ingresados deben estar ordenados\n"
                                                  + "de menor a mayor es decir X0<X1<X2<X3");
                return false;
            }
        
        if(x<x0 || x>x3){
            JOptionPane.showMessageDialog(this, "El valor de X debe estar entre X0 y X3");
            return false;
        }
        
        return true;
    }
    
    
    public void calcularSegundasDerivadas(){
        double A,B,C,D,E,F,x,y;
        
        // Ax + By = C (1)
        // Dx + Ey = F (2)
        
        // Xi-1 = x0
        // Xi   = x1
        // Xi+1 = x2
        
        A =  (2*(x2-x0));
        
        B =  (x2-x1);
        
        C =  (((6/(x2-x1))*(y2-y1)) + ((6/(x1-x0))*(y0-y1)));
        
        //JOptionPane.showMessageDialog(this, "A = "+A+"   B = "+B+"   C = "+C);
        
        
        // Xi-1 = x1
        // Xi   = x2
        // Xi+1 = x3
        
        D =  (x2-x1);
        
        E =  (2*(x3-x1));
        
        F =  (((6/(x3-x2))*(y3-y2)) + ((6/(x2-x1))*(y1-y2)));
        
        //JOptionPane.showMessageDialog(this, "D = "+D+"   E = "+E+"   F = "+F);
        
        
        
        y = (A*F - D*C ) / (A*E - D*B); 
        x = (F-(E*y)) / D;
        
        F2Xi = x;
        F2Xi_1 = y;
        
        //JOptionPane.showMessageDialog(this, "X = "+x+"   Y = "+y);
        
    }
    
    public double interpolacionCubicoSegmentaria(){
        double resultado,xi,xi_1,yi,yi_1;
        
        // El vaor de x esta entre X0 y X1
        if(x>=x0 && x<=x1){
            xi_1 = x0;
            yi_1 = y0;
            xi   = x1;
            yi   = y1;
        }else{
            // El vaor de x esta entre X1 y X2
            if(x>=x1 && x<=x2){
                xi_1 = x1; 
                yi_1 = y1;
                xi   = x2;
                yi   = y2;
            }else{
                // El vaor de x esta entre X2 y X3
                xi_1 = x2;
                yi_1 = y2;
                xi   = x3;
                yi   = y3;
            }
            
        }
        
        resultado =  ((F2Xi_1/(6*(xi-xi_1)))*(xi-x)*(xi-x)*(xi-x)) 
                    +((F2Xi/(6*(xi-xi_1)))*(x-xi_1)*(x-xi_1)*(x-xi_1))
                    +((((yi_1)/(xi-xi_1))-(((F2Xi_1)*(xi-xi_1))/(6)))*(xi-x)) 
                    +((((yi)/(xi-xi_1))-(((F2Xi)*(xi-xi_1))/(6)))*(x-xi_1));
        
        return resultado;
    
    }
    
    public void mostrarResultados(){
        
        //Para mostrar solo 6 decimales
        valorAproximado = (Math.round(valorAproximado *1000000.0)/1000000.0);  
        F2Xi = (Math.round(F2Xi *1000000.0)/1000000.0);  
        F2Xi_1 = (Math.round(F2Xi_1 *1000000.0)/1000000.0);  
        
        
        txtValorAproximado.setText(Double.toString(valorAproximado));
        txtF2Xi.setText(Double.toString(F2Xi));
        txtF2Xi_1.setText(Double.toString(F2Xi_1));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Segmentaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Segmentaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Segmentaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Segmentaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Segmentaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JPanel jpFondo;
    private javax.swing.JLabel lblF2Xi;
    private javax.swing.JLabel lblF2Xi_1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblValorAproximado;
    private javax.swing.JLabel lblX;
    private javax.swing.JLabel lblX0;
    private javax.swing.JLabel lblX1;
    private javax.swing.JLabel lblX2;
    private javax.swing.JLabel lblX3;
    private javax.swing.JLabel lblY0;
    private javax.swing.JLabel lblY1;
    private javax.swing.JLabel lblY2;
    private javax.swing.JLabel lblY3;
    private javax.swing.JTextField txtF2Xi;
    private javax.swing.JTextField txtF2Xi_1;
    private javax.swing.JTextField txtValorAproximado;
    private javax.swing.JTextField txtX;
    private javax.swing.JTextField txtX0;
    private javax.swing.JTextField txtX1;
    private javax.swing.JTextField txtX2;
    private javax.swing.JTextField txtX3;
    private javax.swing.JTextField txtY0;
    private javax.swing.JTextField txtY1;
    private javax.swing.JTextField txtY2;
    private javax.swing.JTextField txtY3;
    // End of variables declaration//GEN-END:variables
}
