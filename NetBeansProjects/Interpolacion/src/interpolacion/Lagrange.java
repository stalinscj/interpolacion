/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interpolacion;


import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JSpinner.DefaultEditor;
import org.nfunk.jep.JEP;

/**
 *
 * @author Usuario
 */
public class Lagrange extends javax.swing.JFrame {
    private String[] args;
    private String funcion;
    private double x;
    private final List<Double> valoresDeXi;
    private int interpolacion;
    private boolean valoresDeXiCargados;
    private double valorAproximado;
    private double valorVerdadero;
    private double errorAbsoluto;
    private double errorRelativoPorcentual;
    private final ArrayList<Double> cordenadasx;
    private final ArrayList<Double> cordenadasy;

    /**
     * Creates new form InterpolacionLagrange
     */
    public Lagrange() {
        args = null;
        x  = (double) 0.0;
        funcion = "";
        valoresDeXi = new ArrayList<Double>();
        interpolacion = 0;
        valoresDeXiCargados = false;
        valorAproximado  = (double) 0.0;
        valorVerdadero  = (double) 0.0;
        errorAbsoluto  = (double) 0.0;
        errorRelativoPorcentual  = (double) 0.0;
        cordenadasx = new ArrayList<Double>();
        cordenadasy = new ArrayList<Double>();
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        ((DefaultEditor) sprInterpolacion.getEditor()).getTextField().setEditable(false);
        txtValorAproximado.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpFondo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblInterpolacion = new javax.swing.JLabel();
        sprInterpolacion = new javax.swing.JSpinner();
        lblEjemploSprInterpolacion = new javax.swing.JLabel();
        txtFuncion = new javax.swing.JTextField();
        lblFuncion = new javax.swing.JLabel();
        lblFuncionEj = new javax.swing.JLabel();
        lblEj1 = new javax.swing.JLabel();
        lblEj3 = new javax.swing.JLabel();
        lblEj2 = new javax.swing.JLabel();
        lblEj4 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        txtX = new javax.swing.JTextField();
        lblX = new javax.swing.JLabel();
        lblXi = new javax.swing.JLabel();
        cboXi = new javax.swing.JComboBox();
        btnCargarValoresXi = new javax.swing.JButton();
        txtValorAproximado = new javax.swing.JTextField();
        lblValorAproximado = new javax.swing.JLabel();
        lblValorVerdadero = new javax.swing.JLabel();
        txtValorVerdadero = new javax.swing.JTextField();
        lblErrorAbsoluto = new javax.swing.JLabel();
        txtErrorAbsoluto = new javax.swing.JTextField();
        lblErrorRelativoPorcentual = new javax.swing.JLabel();
        txtErrorRelativoPorcentual = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpFondo.setBackground(new java.awt.Color(51, 102, 255));

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblTitulo.setText("Polinomios interpolantes de Lagrange");

        lblInterpolacion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblInterpolacion.setText("Interpolacion:");

        sprInterpolacion.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        lblEjemploSprInterpolacion.setText("Ej: 1 = Lineal,  2 = Cuadrática, 3 = Cúbica...");

        lblFuncion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblFuncion.setText("Función a evaluar:");

        lblFuncionEj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblFuncionEj.setText("Ejemplos:");

        lblEj1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblEj1.setText("ln(x)");

        lblEj3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblEj3.setText("cos(pi*x)");

        lblEj2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblEj2.setText("sin(x)");

        lblEj4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblEj4.setText("e^x");

        btnVolver.setText("Volver");
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverMouseClicked(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCalcularMouseClicked(evt);
            }
        });

        txtX.setPreferredSize(new java.awt.Dimension(50, 50));

        lblX.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblX.setText("X = ");

        lblXi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblXi.setText("Xi = ");

        btnCargarValoresXi.setText("Cargar Valores Xi");
        btnCargarValoresXi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCargarValoresXiMouseClicked(evt);
            }
        });
        btnCargarValoresXi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarValoresXiActionPerformed(evt);
            }
        });

        lblValorAproximado.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblValorAproximado.setText("Valor Aproximado");

        lblValorVerdadero.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblValorVerdadero.setText("Valor Verdadero");

        lblErrorAbsoluto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblErrorAbsoluto.setText("Error Absoluto");

        lblErrorRelativoPorcentual.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblErrorRelativoPorcentual.setText("Error Relativo %");

        javax.swing.GroupLayout jpFondoLayout = new javax.swing.GroupLayout(jpFondo);
        jpFondo.setLayout(jpFondoLayout);
        jpFondoLayout.setHorizontalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addComponent(lblX)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCargarValoresXi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEj4)
                            .addComponent(lblEj2))
                        .addGap(67, 67, 67))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTitulo)
                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                        .addComponent(lblInterpolacion)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sprInterpolacion, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblEjemploSprInterpolacion))
                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                        .addGap(245, 245, 245)
                                        .addComponent(lblFuncionEj)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                        .addComponent(lblXi)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cboXi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnCalcular))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblErrorAbsoluto)
                                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(txtErrorAbsoluto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createSequentialGroup()
                                                        .addComponent(lblValorAproximado)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(txtValorAproximado, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                                        .addComponent(lblValorVerdadero)
                                                        .addGap(19, 19, 19)
                                                        .addComponent(txtValorVerdadero, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(69, 69, 69))
                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                        .addComponent(lblErrorRelativoPorcentual)
                                        .addGap(21, 21, 21)
                                        .addComponent(txtErrorRelativoPorcentual, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnVolver))))
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addComponent(lblFuncion)
                                .addGap(18, 18, 18)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFuncion)
                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEj3)
                                            .addComponent(lblEj1))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())))
        );
        jpFondoLayout.setVerticalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInterpolacion)
                    .addComponent(sprInterpolacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEjemploSprInterpolacion))
                .addGap(40, 40, 40)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFuncion)
                    .addComponent(txtFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFuncionEj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEj1)
                    .addComponent(lblEj2)
                    .addComponent(lblX)
                    .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEj3)
                    .addComponent(lblEj4)
                    .addComponent(btnCargarValoresXi))
                .addGap(18, 18, 18)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblXi)
                            .addComponent(cboXi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addComponent(btnCalcular))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValorAproximado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblValorAproximado))
                        .addGap(10, 10, 10)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblValorVerdadero)
                            .addComponent(txtValorVerdadero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtErrorAbsoluto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorAbsoluto))
                        .addGap(9, 9, 9)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblErrorRelativoPorcentual)
                            .addComponent(txtErrorRelativoPorcentual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVolver))))
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseClicked
        Menu.main(args);
        this.dispose();
    }//GEN-LAST:event_btnVolverMouseClicked

    private void btnCalcularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCalcularMouseClicked
        txtValorAproximado.setText("");
        txtValorVerdadero.setText("");
        txtErrorAbsoluto.setText("");
        txtErrorRelativoPorcentual.setText("");
        funcion = txtFuncion.getText();

        
        
        if(funcionValida()){
            if(valoresDeXiCargados){
                if(valorDeXValido()){
                
                    //Fn: Fórmula General de Lagrange
                    valorAproximado = Fn();
                    valorVerdadero = F(x);
                    errorAbsoluto = errorAbsoluto();
                    errorRelativoPorcentual = errorRelativoPorcentual();

                    mostrarResultados();
                    
                    cargarcordenadas();
                    PintarGraficas glagrang=new PintarGraficas(funcion,"INTERPOLACION NEWTON",cordenadasx, cordenadasy);
                    glagrang.setVisible(true);
                    Pintarvavv glagrangvavv=new Pintarvavv(funcion,x,valorAproximado,valorVerdadero);
                    glagrangvavv.setVisible(true);

                }
            }else{
                JOptionPane.showMessageDialog(this, "Valores imcompletos");
            }
                    
        }
            
    }//GEN-LAST:event_btnCalcularMouseClicked

    private void btnCargarValoresXiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarValoresXiMouseClicked
        cboXi.removeAllItems();
        valoresDeXi.removeAll(valoresDeXi);
        valoresDeXiCargados = cargarValoresDeXi();
        
    }//GEN-LAST:event_btnCargarValoresXiMouseClicked

    private void btnCargarValoresXiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarValoresXiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCargarValoresXiActionPerformed
    
    
    public boolean funcionValida(){
        
        JEP parseador = new JEP();
       
        parseador.setImplicitMul(true); 
        parseador.addStandardFunctions();
        parseador.addStandardConstants();
        parseador.addVariable("x",0);
        parseador.parseExpression(funcion);
        
        if(parseador.hasError()){
            JOptionPane.showMessageDialog(this, "Expresión inválida");
            return false;
        }
        return true;
    }
    
    public boolean valorDeXValido(){
        
        if(this.txtX.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Debe ingresar un valor para X");
            return false;
        }
        
        if(this.txtX.getText().equalsIgnoreCase("pi") || this.txtX.getText().equalsIgnoreCase("e")){
            if(this.txtX.getText().equalsIgnoreCase("pi"))
                x = 3.141592653589793;
            else
                x = 2.718281828459045;
                
        }else{
            try{
                x = Double.parseDouble(this.txtX.getText());
                    
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "El valor de X es inválido");
                return false;
            }
        }
        
        for(double xi:valoresDeXi){
            if(x==xi){
                JOptionPane.showMessageDialog(this, "El valor de x debe ser distinto a los valores de Xi");
                return false;
            }
        }
        
        if(x<valoresDeXi.get(0) || x>valoresDeXi.get(valoresDeXi.size()-1)){
            JOptionPane.showMessageDialog(this, "El valor de X debe estar entre X0 y X"+(interpolacion+1));
            return false;
        }
        
        return true;
    }
    
    
    
    public boolean cargarValoresDeXi(){
        
        interpolacion = (int) sprInterpolacion.getValue();
        int i=0;
        String strXi="";
        Double xi = 0.0;
        while(i<=interpolacion){
            try {
                
                strXi = JOptionPane.showInputDialog(this, "Ingrese el valor de X"+i, "Cargando valores de Xi: "+i+"/"+(interpolacion+1),3);
                
                if(strXi == null)
                    return false;
                
                if(strXi.equalsIgnoreCase("pi") || strXi.equalsIgnoreCase("e")){
                    if(strXi.equalsIgnoreCase("pi"))
                        xi = 3.141592653589793;
                    else
                        xi = 2.718281828459045;
                    
                    
                    
                    if(!valoresDeXi.contains(xi)){
                        
                        if(valoresDeXi.size()!=0){
                            if(xi>valoresDeXi.get(i-1)){
                                valoresDeXi.add(xi);
                                cboXi.addItem("X"+i+" = "+strXi);
                                i++;
                            }else{
                                JOptionPane.showMessageDialog(this, "Los valores ingresados deben estar ordenados\n"
                                                                  + "de menor a mayor es decir X0<X1<X2...<Xi-1<Xi");
                            }
                                
                        
                        }else{
                            valoresDeXi.add(xi);
                            cboXi.addItem("X"+i+" = "+strXi);
                            i++;
                        }
                        
                        
                    }else{
                        JOptionPane.showMessageDialog(this, "Los valores de xi deben ser distintos,\n'"+xi+"' ya ha sido ingresado");
                    }
                }else{
                    
                    xi = Double.parseDouble(strXi);
                    if(!valoresDeXi.contains(xi)){
                        
                        if(valoresDeXi.size()!=0){
                            if(xi>valoresDeXi.get(i-1)){
                                valoresDeXi.add(xi);
                                cboXi.addItem("X"+i+" = "+strXi);
                                i++;
                            }else{
                                JOptionPane.showMessageDialog(this, "Los valores ingresados deben estar ordenados\n"
                                                                  + "de menor a mayor es decir X0<X1<X2...<Xi-1<Xi");
                            }
                                
                        
                        }else{
                            valoresDeXi.add(xi);
                            cboXi.addItem("X"+i+" = "+strXi);
                            i++;
                        }
                        
                        
                    }else{
                        JOptionPane.showMessageDialog(this, "Los valores de xi deben ser distintos,\n'"+xi+"' ya ha sido ingresado");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "El valor de X"+i+" '"+strXi+"'"+" es inválido");
            }
            
        }
        return true;
    }
    
    
    public double F(double x){
        
        JEP parseador = new JEP();
        
        double resultado;
        
        parseador.setImplicitMul(true); 
        parseador.addStandardFunctions();
        parseador.addStandardConstants();
        parseador.addVariable("x", x);
        parseador.parseExpression(funcion);
        
        resultado = parseador.getValue();
        
        //JOptionPane.showMessageDialog(this, "f("+x+") = "+" "+resultado);
        
        return resultado;
    }
    
    public Double L(int i){
        Double numerador = 1.0;
        Double denominador = 1.0;
        Double resultado = 0.0;
        int j=0;
        while(j<=interpolacion){
            if(j!=i){
                numerador*= x-valoresDeXi.get(j);
                denominador*= valoresDeXi.get(i) - valoresDeXi.get(j);
            }
            j++;
        }
        
        resultado = (Double) (numerador/denominador);
        
        return resultado;
    }
    
    public Double Fn(){
    
        Double resultado = 0.0;
        int i=0;
        
        while(i<=interpolacion){
            resultado+= L(i)*F(valoresDeXi.get(i));
            i++;
        }
        return resultado;
    }
    
    public double errorAbsoluto(){
        double errorAbsoluto = Math.abs(valorVerdadero - valorAproximado);
        
        return errorAbsoluto;
    }
    
    public double errorRelativoPorcentual(){
        double errorRelativoPorcentual = Math.abs(errorAbsoluto/valorVerdadero) * 100;
        
        return errorRelativoPorcentual;
    }
    
    public void mostrarResultados(){
        
        //Para mostrar solo 6 decimales, menos el ERP% que solo muestra 3
        valorAproximado = (Math.round(valorAproximado *1000000.0)/1000000.0);  
        valorVerdadero = (Math.round(valorVerdadero *1000000.0)/1000000.0);  
        errorAbsoluto = (Math.round(errorAbsoluto *1000000.0)/1000000.0);  
        errorRelativoPorcentual = (Math.round(errorRelativoPorcentual *1000.0)/1000.0);
        
        txtValorAproximado.setText(Double.toString(valorAproximado));
        txtValorVerdadero.setText(Double.toString(valorVerdadero));
        txtErrorAbsoluto.setText(Double.toString(errorAbsoluto));
        txtErrorRelativoPorcentual.setText(Double.toString(errorRelativoPorcentual)+" %");
    }
    
    public void cargarcordenadas(){
         double j;
         
         for( j = valoresDeXi.get(0) ; j < valoresDeXi.get(valoresDeXi.size()-1) ; j = j + 0.05){
            cordenadasx.add(j);
            cordenadasy.add(F(j));
         }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lagrange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lagrange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lagrange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lagrange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lagrange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCargarValoresXi;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox cboXi;
    private javax.swing.JPanel jpFondo;
    private javax.swing.JLabel lblEj1;
    private javax.swing.JLabel lblEj2;
    private javax.swing.JLabel lblEj3;
    private javax.swing.JLabel lblEj4;
    private javax.swing.JLabel lblEjemploSprInterpolacion;
    private javax.swing.JLabel lblErrorAbsoluto;
    private javax.swing.JLabel lblErrorRelativoPorcentual;
    private javax.swing.JLabel lblFuncion;
    private javax.swing.JLabel lblFuncionEj;
    private javax.swing.JLabel lblInterpolacion;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblValorAproximado;
    private javax.swing.JLabel lblValorVerdadero;
    private javax.swing.JLabel lblX;
    private javax.swing.JLabel lblXi;
    private javax.swing.JSpinner sprInterpolacion;
    private javax.swing.JTextField txtErrorAbsoluto;
    private javax.swing.JTextField txtErrorRelativoPorcentual;
    private javax.swing.JTextField txtFuncion;
    private javax.swing.JTextField txtValorAproximado;
    private javax.swing.JTextField txtValorVerdadero;
    private javax.swing.JTextField txtX;
    // End of variables declaration//GEN-END:variables
}
